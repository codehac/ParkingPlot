<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="11" passed="11">
  <reporter-output>
  </reporter-output>
  <suite name="PlotSlotManagerTest" duration-ms="166" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="166" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
      <class name="PlotSlotManagerTest">
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="beforeEachTest" is-config="true" duration-ms="11" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="intialize()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="intialize" is-config="true" duration-ms="14" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intialize -->
        <test-method status="PASS" signature="checkFile()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="checkFile" duration-ms="22" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[fileinput1.txt (The system cannot find the file specified)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: fileinput1.txt (The system cannot find the file specified)
at java.io.FileInputStream.open0(Native Method)
at java.io.FileInputStream.open(FileInputStream.java:195)
at java.io.FileInputStream.<init>(FileInputStream.java:138)
at java.io.FileInputStream.<init>(FileInputStream.java:93)
at com.gojek.PlotSlotManager.readDirectory(PlotSlotManager.java:45)
at PlotSlotManagerTest.checkFile(PlotSlotManagerTest.java:43)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:110)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkFile -->
        <test-method status="PASS" signature="freeMemory()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="freeMemory" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- freeMemory -->
        <test-method status="PASS" signature="AfterEachTest()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="AfterEachTest" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="createSlot()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="createSlot" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSlot -->
        <test-method status="PASS" signature="intialize()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="intialize" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intialize -->
        <test-method status="PASS" signature="AfterEachTest()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="AfterEachTest" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterEachTest -->
        <test-method status="PASS" signature="freeMemory()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="freeMemory" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- freeMemory -->
        <test-method status="PASS" signature="intialize()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="intialize" is-config="true" duration-ms="1" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intialize -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="createSlotwithError()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="createSlotwithError" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSlotwithError -->
        <test-method status="PASS" signature="freeMemory()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="freeMemory" is-config="true" duration-ms="1" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- freeMemory -->
        <test-method status="PASS" signature="AfterEachTest()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="AfterEachTest" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="getAllRegistrationByColor()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="getAllRegistrationByColor" duration-ms="53" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllRegistrationByColor -->
        <test-method status="PASS" signature="intialize()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="intialize" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intialize -->
        <test-method status="PASS" signature="freeMemory()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="freeMemory" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- freeMemory -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="beforeEachTest" is-config="true" duration-ms="1" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="AfterEachTest()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="AfterEachTest" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterEachTest -->
        <test-method status="PASS" signature="intialize()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="intialize" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intialize -->
        <test-method status="PASS" signature="removeCarFromSlot()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="removeCarFromSlot" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeCarFromSlot -->
        <test-method status="PASS" signature="AfterEachTest()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="AfterEachTest" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterEachTest -->
        <test-method status="PASS" signature="freeMemory()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="freeMemory" is-config="true" duration-ms="1" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- freeMemory -->
        <test-method status="PASS" signature="removeCarFromSlotNumber()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="removeCarFromSlotNumber" duration-ms="2" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeCarFromSlotNumber -->
        <test-method status="PASS" signature="intialize()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="intialize" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intialize -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="freeMemory()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="freeMemory" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- freeMemory -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="beforeEachTest" is-config="true" duration-ms="1" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="AfterEachTest()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="AfterEachTest" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterEachTest -->
        <test-method status="PASS" signature="freeMemory()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="freeMemory" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- freeMemory -->
        <test-method status="PASS" signature="AfterEachTest()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="AfterEachTest" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterEachTest -->
        <test-method status="PASS" signature="intialize()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="intialize" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intialize -->
        <test-method status="PASS" signature="removeCarFromSlotNumber1()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="removeCarFromSlotNumber1" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeCarFromSlotNumber1 -->
        <test-method status="PASS" signature="intialize()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="intialize" is-config="true" duration-ms="1" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intialize -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="freeMemory()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="freeMemory" is-config="true" duration-ms="1" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- freeMemory -->
        <test-method status="PASS" signature="AfterEachTest()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="AfterEachTest" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterEachTest -->
        <test-method status="PASS" signature="removeFromSlot()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="removeFromSlot" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeFromSlot -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="intialize()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="intialize" is-config="true" duration-ms="1" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intialize -->
        <test-method status="PASS" signature="slotNumberByRegistrationNumberPresent()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="slotNumberByRegistrationNumberPresent" duration-ms="8" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slotNumberByRegistrationNumberPresent -->
        <test-method status="PASS" signature="AfterEachTest()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="AfterEachTest" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterEachTest -->
        <test-method status="PASS" signature="freeMemory()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="freeMemory" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- freeMemory -->
        <test-method status="PASS" signature="intialize()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="intialize" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intialize -->
        <test-method status="PASS" signature="slotNumberByRegistrationNumbersNotPresent()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="slotNumberByRegistrationNumbersNotPresent" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slotNumberByRegistrationNumbersNotPresent -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="beforeEachTest" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="beforeEachTest()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="beforeEachTest" is-config="true" duration-ms="1" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method status="PASS" signature="freeMemory()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="freeMemory" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- freeMemory -->
        <test-method status="PASS" signature="AfterEachTest()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="AfterEachTest" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterEachTest -->
        <test-method status="PASS" signature="intialize()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="intialize" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- intialize -->
        <test-method status="PASS" signature="statusOfSlot()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="statusOfSlot" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statusOfSlot -->
        <test-method status="PASS" signature="AfterEachTest()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="AfterEachTest" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterEachTest -->
        <test-method status="PASS" signature="freeMemory()[pri:0, instance:PlotSlotManagerTest@2d209079]" name="freeMemory" is-config="true" duration-ms="0" started-at="2019-07-23T18:22:12Z" finished-at="2019-07-23T18:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- freeMemory -->
      </class> <!-- PlotSlotManagerTest -->
    </test> <!-- Command line test -->
  </suite> <!-- PlotSlotManagerTest -->
</testng-results>
